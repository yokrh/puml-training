@startuml uml1

title puml-training

actor actor_a
participant p_a
participant p_b
box box1 #eeeeff
participant "participant c" as p_c
participant p_d
database "db" as db
endbox
box box2 #ffeeee
participant p_e
participant p_f
endbox
participant p_g
participant p_h

== section 1 ==

actor_a -> p_a : start
activate p_a
  p_a -> p_b : open
  note right
    multiple
    line
    note
  end note
  note left p_b : this is note left
  note right p_b : this is note right
  activate p_b
    p_b -> p_e : register
    activate p_e
      p_e -> p_f : store to database
      activate p_f
        p_f -> p_e
      deactivate p_f
      p_e -> p_b : result
    deactivate p_e

    opt if option 1 is valid
      p_b -> p_g : share
      activate p_g
        p_g -> p_b
      deactivate p_g
    end opt

    p_b -> p_c : go to main process

    activate p_c
      group group1
        alt if alt 1 is true
          opt if the field is null
            p_c -> p_b : error
            p_b -> p_a : error
          end opt
          p_c -> p_c : process hogehoge
        else else
          p_c -> p_h : notify
        end alt
      end group

      group group2
        alt if alt 2 is case1
          opt if the field is null
            p_c -> p_b : error
          end opt
          p_c -> p_d : store to database
        else if alt 2 is case2
          p_c -> p_c : process fugafuga
        else else
          p_c -> p_c : process piyopiyo
        end alt
      end group
    deactivate p_c

    p_c -> p_b
    p_b -> p_a : close
  deactivate p_b
p_a -> p_a : post process
p_a -> actor_a : show result
deactivate p_a

@enduml
